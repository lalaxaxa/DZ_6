spring.application.name=DZ_4
server.port=8080

# Data Source
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/hibernate_demo_db
spring.datasource.username=postgres
spring.datasource.password=postgres

# Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.show_sql=false

# Logging
logging.level.root=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

#Kafka
kafka.enabled=false
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
#spring.kafka.producer.retries=10
#spring.kafka.producer.retry.backoff.ms=1000
spring.kafka.producer.properties.delivery.timeout.ms=120000
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
#for idempotence acks=all, retries>0, max.in.flight=1-5
spring.kafka.producer.properties.enable.idempotence=true


topic.user-events=user-events-topic
#@Value("${topic.user-events}")
#private String userEventsTopic;
#??? ???
#@Value("${topic.user-events}") String topicName
#bootstrap-servers: ${KAFKA_BOOTSTRAP:localhost:9092}